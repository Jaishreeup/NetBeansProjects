
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JAISHREE UPRETI
 */
public class Camera extends javax.swing.JFrame {
    private String inout;
    private String t2;
    private String t1;
    private String d2;
    private String d1;
    private int time2;
    private int time1;

    /**
     * Creates new form Camera
     */
    public Camera() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Registration no");

        jLabel2.setText("Model no.");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("CAMERA");

        jRadioButton1.setText("enter");

        jRadioButton2.setText("exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(33, 33, 33)
                                .addComponent(jRadioButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jButton1)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {                                         
            // TODO add your handling code here:
            reg=jTextField1.getText();
            model=jTextField2.getText();
            inout=(jRadioButton1.isSelected()?"entry":"exit");
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Calendar calobj = Calendar.getInstance();
            System.out.println(df.format(calobj.getTime()));
            String str[]=df.format(calobj.getTime()).split(" ");
            s=c.createStatement();
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
           String sql="select * from vehicles where reg_no='"+reg+"' and model='"+model+"'";
            rs=s.executeQuery(sql);
            if(rs.next()){
                System.out.println("lift gate...");
                new Alert(this,true).main(new String[]{"Lift gate!!"});
                if(inout.equals("entry"))
                {
                    sql="update IN__OUT_LOG set entrytime='"+str[1]+"',entrydate='"+str[0]+"' where reg='"+reg+"' and model='"+model+"'";
                    s.executeUpdate(sql);
                    sql="select * from IN_OUT_LOG where regno='"+reg+"' and model='"+model+"'";
                    s=c.createStatement();
                    rs=s.executeQuery(sql);
                    rs.next();
                    sql="insert into history values('"+rs.getString(1)+"','"+rs.getString(2)+"','"+rs.getString(3)
                            +"','"+rs.getString(4)+"','"+rs.getString(5)+"','"+rs.getString(6)
                            +"','"+rs.getString(7)+"')";
                    s=c.createStatement();
                    s.executeUpdate(sql);
                     //transfer details to history table
                }
                else
                {
                    sql="insert into IN_OUT_LOG values('"+reg+"','"+model+"','00:00:00','"+str[1]+"','0000-00-00'"+str[0]+"','in')";
                    s.executeUpdate(sql);
                }
            //details regarding entry and exit of vehicles
            }
            else
            {
                System.out.println("vehicle not registered...");
                if(inout.equals("entry"))
                {
                        sql="insert into IN_OUT_LOG values('"+reg+"','"+model+"','"+str[1]+"','00:00:00','"+str[0]+"','0000-00-00','out')";
                        s.executeUpdate(sql);
                
                }
                else
                {
                    sql="update IN__OUT_LOG set exittime='"+str[1]+"',exitdate='"+str[0]+"' where reg='"+reg+"' and model='"+model+"'";
                    s.executeUpdate(sql);
                    sql="select * from IN_OUT_LOG where regno='"+reg+"' and model='"+model+"'";
                    s=c.createStatement();
                    rs=s.executeQuery(sql);
                    rs.next();
                    sql="insert into history values('"+rs.getString(1)+"','"+rs.getString(2)+"','"+rs.getString(3)
                            +"','"+rs.getString(4)+"','"+rs.getString(5)+"','"+rs.getString(6)
                            +"','"+rs.getString(7)+"')";
                    s=c.createStatement();
                    s.executeUpdate(sql);
                    t2=rs.getString(4);
                    t1=rs.getString(3);
                    d2=rs.getString(6);
                    d1=rs.getString(5);
                    if(d1.equals(d2))
                    {
                        String[] hourMin = t2.split(":");
                        int hour = Integer.parseInt(hourMin[0]);
                        int mins = Integer.parseInt(hourMin[1]);
                        int hoursInMins = hour * 60;
                        time2= hoursInMins + mins;

                        hourMin = t1.split(":");
                        hour = Integer.parseInt(hourMin[0]);
                        mins = Integer.parseInt(hourMin[1]);
                        hoursInMins = hour * 60;
                        time1= hoursInMins + mins;

                        if((time2-time1)/60.0>8)
                        {
                            System.out.println("LATE EXIT......");
                            new late_8_hours().main(null);
                        }
                    }
                    //transfer details to history table
                }
                new outside_vehicle().main(null);
            }
            setVisible(false); //you can't see me!
dispose();   
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
          c=DriverManager.getConnection("jdbc:derby://localhost:1527/iis");
   
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Camera().setVisible(true);
            }
        });
    }
     static Connection c;
    static Statement s;
  static ResultSet rs;
    private static String reg,model;
   
   
   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
